{"version":3,"file":"static/js/372.d329277d.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  text-align: center;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\nexport const Loader = ({ isLoading }) => {\n  return (\n    <LoaderContainer>\n      {isLoading && (\n        <MagnifyingGlass\n          visible={true}\n          height=\"140\"\n          width=\"140\"\n          ariaLabel=\"MagnifyingGlass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"MagnifyingGlass-wrapper\"\n          glassColor=\"whitesmoke\" // orangered\n          color=\"#808080\" // сірий колір\n        />\n      )}\n    </LoaderContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n\n  gap: 20px;\n  margin: 0 auto;\n  padding: 20px;\n\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 400px;\n  border-radius: 8px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 20px;\n  align-self: center;\n`;\n\nexport const Overview = styled.p`\n  font-style: italic;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding-left: 20px;\n  padding-top: 5px;\n\n  border-radius: 8px;\n`;\n\nexport const AddList = styled.li`\n  padding: 10px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: bold;\n  color: grey;\n\n  &:hover {\n    color: orangered;\n  }\n\n  &.active {\n    color: orangered;\n    font-weight: bold;\n  }\n`;\n\nexport const StyledBackLink = styled(Link)`\n  text-decoration: none;\n  font-weight: bold;\n  font-size: 18px;\n  margin: 15px;\n  display: block;\n  color: grey;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n","// import { Outlet, useParams, useLocation } from 'react-router-dom';\n// import { useEffect, useState, useRef } from 'react';\n// import { getDetailsMovies } from 'services/api';\n\n// import { TiArrowBack } from 'react-icons/ti';\n\n// import { Loader } from 'components/Loader/Loader';\n// import {\n//   DetailsContainer,\n//   MovieImage,\n//   Overview,\n//   AdditionalInfo,\n//   MovieInfo,\n//   AddList,\n//   StyledNavLink,\n//   StyledBackLink,\n// } from './MovieDetailsPage.styled.js';\n\n// import { ErrorMessage } from '../Homepage/HomePage.styled';\n// import mainplaceholder from 'services/mainplaceholder.png';\n\n// export default function MovieDetailsPage() {\n//   const location = useLocation();\n//   const backLinkRef = useRef(location);\n\n//   const params = useParams();\n\n//   const [movie, setMovie] = useState(null);\n//   const [error, setError] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     async function getDetails() {\n//       try {\n//         setIsLoading(true);\n//         const fetchedDetails = await getDetailsMovies(params.movieId);\n//         setMovie(fetchedDetails);\n//       } catch (error) {\n//         setError(true);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     }\n//     getDetails();\n//   }, [params.movieId]);\n\n//   // Визначення getUserScore всередині області відображення компонентів\n//   const getUserScore =\n//     movie && movie.vote_average ? Math.round(movie.vote_average * 10) : 0;\n\n//   return (\n//     <>\n//       {error && (\n//         <ErrorMessage>\n//           Oops! Something went wrong! Please try reloading this page!\n//         </ErrorMessage>\n//       )}\n//       <Loader isLoading={isLoading} />\n\n//       <StyledBackLink to={backLinkRef.current.state?.from ?? '/'}>\n//         <TiArrowBack style={{ verticalAlign: 'bottom' }} />\n//         Go back\n//       </StyledBackLink>\n\n//       {movie && (\n//         <DetailsContainer>\n//           <MovieImage\n//             src={\n//               movie.poster_path\n//                 ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n//                 : mainplaceholder\n//             }\n//             alt={movie.title}\n//           />\n//           <MovieInfo>\n//             <h1>{movie.title}</h1>\n//             <a\n//               href={`https://www.youtube.com/watch?v=${movie.title}`}\n//               target=\"_blank\"\n//               rel=\"noreferrer noopener\"\n//             >\n//               Watch Trailer\n//             </a>\n\n//             <p>User score: {getUserScore}%</p>\n//             <h2>Overview</h2>\n//             <Overview>{movie.overview}</Overview>\n//             <h2>Genres</h2>\n//             {movie.genres.map(({ name }, index) => (\n//               <span key={index}>{name} </span>\n//             ))}\n//           </MovieInfo>\n//         </DetailsContainer>\n//       )}\n//       <AdditionalInfo>\n//         <h3>Additional information</h3>\n//         <ul>\n//           <AddList>\n//             <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n//           </AddList>\n//           <AddList>\n//             <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n//           </AddList>\n//         </ul>\n//       </AdditionalInfo>\n\n//       <Outlet />\n//     </>\n//   );\n// }\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport { getDetailsMovies } from 'services/api';\n\nimport { TiArrowBack } from 'react-icons/ti';\n\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  DetailsContainer,\n  MovieImage,\n  Overview,\n  AdditionalInfo,\n  MovieInfo,\n  AddList,\n  StyledNavLink,\n  StyledBackLink,\n} from './MovieDetailsPage.styled.js';\n\nimport { ErrorMessage } from '../Homepage/HomePage.styled';\nimport mainplaceholder from 'services/mainplaceholder.png';\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  const params = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        setIsLoading(true);\n        const fetchedDetails = await getDetailsMovies(params.movieId);\n        setMovie(fetchedDetails);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getDetails();\n  }, [params.movieId]);\n\n  // Function to construct a YouTube search URL based on movie title\n  const getYoutubeSearchUrl = movieTitle => {\n    const encodedTitle = encodeURIComponent(\n      movieTitle.replace(/[^a-zA-Z0-9 ]/g, '')\n    ); // Sanitize title for URL\n    return `https://www.youtube.com/results?search_query=${encodedTitle}+trailer`;\n  };\n\n  const getUserScore =\n    movie && movie.vote_average ? Math.round(movie.vote_average * 10) : 0;\n\n  return (\n    <>\n      {error && (\n        <ErrorMessage>\n          Oops! Something went wrong! Please try reloading this page!\n        </ErrorMessage>\n      )}\n      <Loader isLoading={isLoading} />\n\n      <StyledBackLink to={backLinkRef.current.state?.from ?? '/'}>\n        <TiArrowBack style={{ verticalAlign: 'bottom' }} />\n        Go back\n      </StyledBackLink>\n\n      {movie && (\n        <DetailsContainer>\n          <MovieImage\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : mainplaceholder\n            }\n            alt={movie.title}\n          />\n          <MovieInfo>\n            <h1>{movie.title}</h1>\n            <a\n              href={getYoutubeSearchUrl(movie.title)} // Use constructed search URL\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              Watch Trailer\n            </a>\n\n            <p>User score: {getUserScore}%</p>\n            <h2>Overview</h2>\n            <Overview>{movie.overview}</Overview>\n            <h2>Genres</h2>\n            {movie.genres.map(({ name }, index) => (\n              <span key={index}>{name} </span>\n            ))}\n          </MovieInfo>\n        </DetailsContainer>\n      )}\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <ul>\n          <AddList>\n            <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n          </AddList>\n          <AddList>\n            <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n          </AddList>\n        </ul>\n      </AdditionalInfo>\n\n      <Outlet />\n    </>\n  );\n}\n"],"names":["LoaderContainer","styled","_templateObject","_taggedTemplateLiteral","Loader","_ref","isLoading","_jsx","children","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","DetailsContainer","MovieImage","_templateObject2","MovieInfo","_templateObject3","Overview","_templateObject4","AdditionalInfo","_templateObject5","AddList","_templateObject6","StyledNavLink","NavLink","_templateObject7","StyledBackLink","Link","_templateObject8","MovieDetailsPage","_backLinkRef$current$","_backLinkRef$current$2","location","useLocation","backLinkRef","useRef","params","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","setIsLoading","useEffect","_getDetails","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedDetails","_context","prev","next","getDetailsMovies","movieId","sent","t0","finish","stop","apply","arguments","getDetails","getUserScore","vote_average","Math","round","_jsxs","_Fragment","ErrorMessage","to","current","state","from","TiArrowBack","style","verticalAlign","src","poster_path","concat","mainplaceholder","alt","title","href","movieTitle","encodedTitle","encodeURIComponent","replace","getYoutubeSearchUrl","target","rel","overview","genres","map","index","name","Outlet"],"sourceRoot":""}