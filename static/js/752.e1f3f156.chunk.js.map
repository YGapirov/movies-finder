{"version":3,"file":"static/js/752.e1f3f156.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Homepage/HomePage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  text-align: center;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\nexport const Loader = ({ isLoading }) => {\n  return (\n    <LoaderContainer>\n      {isLoading && (\n        <MagnifyingGlass\n          visible={true}\n          height=\"140\"\n          width=\"140\"\n          ariaLabel=\"MagnifyingGlass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"MagnifyingGlass-wrapper\"\n          glassColor=\"whitesmoke\" // orangered\n          color=\"#808080\" // сірий колір\n        />\n      )}\n    </LoaderContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 14px;\n`;\n\nexport const MovieItem = styled.li`\n  margin: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  max-width: 300px;\n  max-height: 500px;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  display: block;\n  text-align: center;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 15px;\n  font-weight: bold;\n  font-size: 18px;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 300px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesListContainer,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieTitle,\n} from './MoviesList.styled';\n\nimport mainplaceholder from 'services/mainplaceholder.png';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  \n\n  return (\n    <MoviesListContainer>\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            <MovieImage\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                  : mainplaceholder\n              }\n              alt={film.title}\n            />\n            <MovieTitle>{film.title}</MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesListContainer>\n  );\n};\n","import { getTrendingMovies } from '../../services/api';\nimport { useEffect, useState } from 'react';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {\n  TrendingTitle,\n  ErrorMessage,\n  ScrollToTopButton,\n} from './HomePage.styled.js';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showScrollButton, setShowScrollButton] = useState(false);\n\n  useEffect(() => {\n    async function getTrending() {\n      try {\n        setIsLoading(true);\n        const { results } = await getTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getTrending();\n  }, []);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.pageYOffset > 200) {\n        setShowScrollButton(true);\n      } else {\n        setShowScrollButton(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div>\n      <TrendingTitle>Trending today</TrendingTitle>\n      {error && (\n        <ErrorMessage>\n          Oops! Something went wrong! Please try reloading this page!\n        </ErrorMessage>\n      )}\n      <Loader isLoading={isLoading} />\n\n      {movies.length > 0 && <MoviesList films={movies} />}\n\n      {showScrollButton && (\n        <ScrollToTopButton onClick={scrollToTop}>Scroll Up</ScrollToTopButton>\n      )}\n    </div>\n  );\n}\n"],"names":["LoaderContainer","styled","_templateObject","_taggedTemplateLiteral","Loader","_ref","isLoading","_jsx","children","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","MoviesListContainer","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","MovieImage","_templateObject4","MovieTitle","_templateObject5","MoviesList","films","location","useLocation","map","film","_jsxs","to","concat","id","state","from","src","poster_path","mainplaceholder","alt","title","HomePage","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","setIsLoading","_useState7","_useState8","showScrollButton","setShowScrollButton","useEffect","_getTrending","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrendingMov","results","_context","prev","next","getTrendingMovies","sent","t0","finish","stop","apply","arguments","getTrending","handleScroll","window","pageYOffset","addEventListener","removeEventListener","TrendingTitle","ErrorMessage","length","ScrollToTopButton","onClick","scrollTo","top","behavior"],"sourceRoot":""}