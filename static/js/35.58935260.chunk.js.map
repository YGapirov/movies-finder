{"version":3,"file":"static/js/35.58935260.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","webpack://movies-finder/./src/components/Searchbar/SearchBar.module.css?0673","components/Searchbar/SearchBar.js","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  text-align: center;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\nexport const Loader = ({ isLoading }) => {\n  return (\n    <LoaderContainer>\n      {isLoading && (\n        <MagnifyingGlass\n          visible={true}\n          height=\"140\"\n          width=\"140\"\n          ariaLabel=\"MagnifyingGlass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"MagnifyingGlass-wrapper\"\n          glassColor=\"whitesmoke\" // orangered\n          color=\"#808080\" // сірий колір\n        />\n      )}\n    </LoaderContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 14px;\n`;\n\nexport const MovieItem = styled.li`\n  margin: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  max-width: 300px;\n  max-height: 500px;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  display: block;\n  text-align: center;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 15px;\n  font-weight: bold;\n  font-size: 18px;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 300px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesListContainer,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieTitle,\n} from './MoviesList.styled';\n\nimport mainplaceholder from 'services/mainplaceholder.png';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  \n\n  return (\n    <MoviesListContainer>\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            <MovieImage\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                  : mainplaceholder\n              }\n              alt={film.title}\n            />\n            <MovieTitle>{film.title}</MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesListContainer>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Div\":\"SearchBar_Div__tgC5a\",\"SearchForm\":\"SearchBar_SearchForm__Tk-nr\",\"SearchFormButton\":\"SearchBar_SearchFormButton__Dy4RJ\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__QS9Ql\",\"SearchFormInput\":\"SearchBar_SearchFormInput__1xqp6\"};","import { Formik, Form, Field } from 'formik';\nimport css from './SearchBar.module.css';\n\nexport const Searchbar = ({ onSubmit }) => {\n  return (\n    <div className={css.Div}>\n      <Formik\n        initialValues={{\n          query: '',\n        }}\n        onSubmit={(values, actions) => {\n          onSubmit(values.query);\n\n          actions.resetForm();\n        }}\n      >\n        <Form className={css.SearchForm}>\n          <button type=\"submit\" className={css.SearchFormButton}>\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n          <Field\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            name=\"query\"\n            placeholder=\"Search movies\"\n          />\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyleErrorMsg = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: red;\n  font-weight: bold;\n`;\n\nexport const StyledNotFound = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: red;\n  font-weight: bold;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { searchMovies } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Searchbar } from 'components/Searchbar/SearchBar';\nimport { StyleErrorMsg, StyledNotFound } from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [params, setParams] = useSearchParams();\n\n  const query = params.get('query');\n  useEffect(() => {\n    if (!query) return;\n\n    const handleSearch = async () => {\n      try {\n        setIsLoading(true);\n        const fetchedMovies = await searchMovies(query);\n        setMovies(fetchedMovies.results);\n        if (fetchedMovies.results.length === 0) {\n          setError('notFound');\n        } else {\n          setError(null);\n        }\n\n        // Оновлення параметрів URL після пошуку\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleSearch();\n  }, [query]);\n\n  const handleSubmit = query => {\n    setParams({ query });\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmit} />\n      <Loader isLoading={isLoading} />\n\n      {error && error !== 'notFound' && (\n        <StyleErrorMsg>\n          Oops! Something went wrong. Please try again later.\n        </StyleErrorMsg>\n      )}\n      {movies.length > 0 && <MoviesList films={movies} />}\n      {error === 'notFound' && (\n        <StyledNotFound>Movie \"{query}\" not found.</StyledNotFound>\n      )}\n    </div>\n  );\n}\n"],"names":["LoaderContainer","styled","_templateObject","_taggedTemplateLiteral","Loader","_ref","isLoading","_jsx","children","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","MoviesListContainer","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","MovieImage","_templateObject4","MovieTitle","_templateObject5","MoviesList","films","location","useLocation","map","film","_jsxs","to","concat","id","state","from","src","poster_path","mainplaceholder","alt","title","Searchbar","onSubmit","className","css","Formik","initialValues","query","values","actions","resetForm","Form","type","Field","autoComplete","autoFocus","name","placeholder","StyleErrorMsg","StyledNotFound","MoviesPage","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","useEffect","handleSearch","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","searchMovies","sent","results","length","t0","finish","stop","apply","arguments"],"sourceRoot":""}