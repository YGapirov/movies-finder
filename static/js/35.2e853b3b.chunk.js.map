{"version":3,"file":"static/js/35.2e853b3b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/ScrollUp/ScrollUp.styled.js","services/arrow.svg","components/ScrollUp/ScrollUp.js","webpack://movies-finder/./src/components/Searchbar/SearchBar.module.css?0673","components/Searchbar/SearchBar.js","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  text-align: center;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\nexport const Loader = ({ isLoading }) => {\n  return (\n    <LoaderContainer>\n      {isLoading && (\n        <MagnifyingGlass\n          visible={true}\n          height=\"140\"\n          width=\"140\"\n          ariaLabel=\"MagnifyingGlass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"MagnifyingGlass-wrapper\"\n          glassColor=\"whitesmoke\" // orangered\n          color=\"#808080\" // сірий колір\n        />\n      )}\n    </LoaderContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 14px;\n`;\n\nexport const MovieItem = styled.li`\n  margin: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  max-width: 300px;\n  max-height: 500px;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  display: block;\n  text-align: center;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 15px;\n  font-weight: bold;\n  font-size: 18px;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 300px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesListContainer,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieTitle,\n} from './MoviesList.styled';\n\nimport mainplaceholder from 'services/mainplaceholder.png';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  \n\n  return (\n    <MoviesListContainer>\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            <MovieImage\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                  : mainplaceholder\n              }\n              alt={film.title}\n            />\n            <MovieTitle>{film.title}</MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesListContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ScrollToTopButton = styled.button`\n  position: fixed;\n\n  bottom: 20px;\n  right: 20px;\n  z-index: 1000;\n  background-color: grey;\n  color: #fff;\n  border: none;\n  border-radius: 50%;\n  width: 70px;\n  height: 70px;\n  padding: 10px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: orangered;\n  }\n`;\n\nexport const ArrowIcon = styled.img`\n  width: 34px;\n  height: 34px;\n  margin: auto;\n`;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"arrow-up2\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.414 12.586l-10-10c-0.781-0.781-2.047-0.781-2.828 0l-10 10c-0.781 0.781-0.781 2.047 0 2.828s2.047 0.781 2.828 0l6.586-6.586v19.172c0 1.105 0.895 2 2 2s2-0.895 2-2v-19.172l6.586 6.586c0.39 0.39 0.902 0.586 1.414 0.586s1.024-0.195 1.414-0.586c0.781-0.781 0.781-2.047 0-2.828z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.5f298d229c86514729c44f872f113ccf.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\nimport { ScrollToTopButton, ArrowIcon } from './ScrollUp.styled';\nimport arrowSvg from '../../services/arrow.svg';\n\nconst ScrollButton = () => {\n  const [showScrollButton, setShowScrollButton] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.pageYOffset > 200) {\n        setShowScrollButton(true);\n      } else {\n        setShowScrollButton(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      {showScrollButton && (\n        <ScrollToTopButton onClick={scrollToTop}>\n          <ArrowIcon src={arrowSvg} alt=\"Scroll to top\" />\n        </ScrollToTopButton>\n      )}\n    </>\n  );\n};\n\nexport default ScrollButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"Div\":\"SearchBar_Div__tgC5a\",\"SearchForm\":\"SearchBar_SearchForm__Tk-nr\",\"SearchFormButton\":\"SearchBar_SearchFormButton__Dy4RJ\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__QS9Ql\",\"SearchFormInput\":\"SearchBar_SearchFormInput__1xqp6\"};","import { Formik, Form, Field } from 'formik';\nimport css from './SearchBar.module.css';\n\nexport const Searchbar = ({ onSubmit }) => {\n  return (\n    <div className={css.Div}>\n      <Formik\n        initialValues={{\n          query: '',\n        }}\n        onSubmit={(values, actions) => {\n          onSubmit(values.query);\n\n          actions.resetForm();\n        }}\n      >\n        <Form className={css.SearchForm}>\n          <button type=\"submit\" className={css.SearchFormButton}>\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n          <Field\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            name=\"query\"\n            placeholder=\"Search movies\"\n          />\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyleErrorMsg = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: red;\n  font-weight: bold;\n`;\n\nexport const StyledNotFound = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: red;\n  font-weight: bold;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { searchMovies } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Searchbar } from 'components/Searchbar/SearchBar';\nimport { StyleErrorMsg, StyledNotFound } from './MoviesPage.styled';\nimport ScrollButton from 'components/ScrollUp/ScrollUp';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [params, setParams] = useSearchParams();\n\n  const query = params.get('query');\n  useEffect(() => {\n    if (!query) return;\n\n    const handleSearch = async () => {\n      try {\n        setIsLoading(true);\n        const fetchedMovies = await searchMovies(query);\n        setMovies(fetchedMovies.results);\n        if (fetchedMovies.results.length === 0) {\n          setError('notFound');\n        } else {\n          setError(null);\n        }\n\n        // Оновлення параметрів URL після пошуку\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleSearch();\n  }, [query]);\n\n  const handleSubmit = query => {\n    setParams({ query });\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmit} />\n      <Loader isLoading={isLoading} />\n\n      {error && error !== 'notFound' && (\n        <StyleErrorMsg>\n          Oops! Something went wrong. Please try again later.\n        </StyleErrorMsg>\n      )}\n      {movies.length > 0 && <MoviesList films={movies} />}\n      {error === 'notFound' && (\n        <StyledNotFound>Movie \"{query}\" not found.</StyledNotFound>\n      )}\n      <ScrollButton />\n    </div>\n  );\n}\n"],"names":["LoaderContainer","styled","_templateObject","_taggedTemplateLiteral","Loader","_ref","isLoading","_jsx","children","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","MoviesListContainer","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","MovieImage","_templateObject4","MovieTitle","_templateObject5","MoviesList","films","location","useLocation","map","film","_jsxs","to","concat","id","state","from","src","poster_path","mainplaceholder","alt","title","ScrollToTopButton","ArrowIcon","_useState","useState","_useState2","_slicedToArray","showScrollButton","setShowScrollButton","useEffect","handleScroll","window","pageYOffset","addEventListener","removeEventListener","_Fragment","onClick","scrollTo","top","behavior","arrowSvg","Searchbar","onSubmit","className","css","Formik","initialValues","query","values","actions","resetForm","Form","type","Field","autoComplete","autoFocus","name","placeholder","StyleErrorMsg","StyledNotFound","MoviesPage","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","handleSearch","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","searchMovies","sent","results","length","t0","finish","stop","apply","arguments","ScrollButton"],"sourceRoot":""}